<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<preface id="preface">
  <?dbhtml stop-chunking?>

  <title>Preface</title>

  <para>你并不需要成为编程高手才能开发 WEB 应用。使用 Dart ,当你为当今的互联网开
  发高性能应用时，你将会非常富有创造力。</para>

  <para>这本书的目标是成为一本实用的Dart语言入门书，包含语言介绍、类库介绍、
  工具介绍。由于本书很短，而且 Dart 也很年轻，你同样需要查阅 Dart 官方网站
  <ulink url="http://dartlang.org"></ulink>—获取更多的细节以及后续更新。 
  关注 Google+ <ulink url="http://google.com/+dartlang">Dart 网页</ulink> 
  获取最新的新闻。</para>

  <para>另外一个重要的网站是本书的 <ulink
  url="https://github.com/dart-lang/dart-up-and-running-book">GitHub
  仓库</ulink> 本文在 <ulink
  url="http://creativecommons.org/licenses/by-nc-nd/3.0/us/">Creative Commons
  Attribution-Noncommercial-No Derivative Works 3.0 United States
  License</ulink> 的许可下使用该书的内容。这本书中例子的源代码文件 <ulink
  url="https://github.com/dart-lang/dart-up-and-running-book/tree/master/code"><literal>code/</literal>
  subdirectory.</ulink> 直接下载源代码文件进行学习将会取得更好的效果</para>

  <para>如果你发现本书内容或例子代码有错误，请在这里 <ulink
  url="https://github.com/dart-lang/dart-up-and-running-book/issues/new">创建一个
  问题</ulink>反馈</para>

  <sect1 id="preface-conventions">
    <title>本书中的一些习俗</title>

    <para>下面是本书印刷上的一些习俗:</para>

    <variablelist>
      <varlistentry>
        <term><emphasis>斜体</emphasis></term>

        <listitem>
          <para>标示新的术语, 网址, 电子邮件地址, 文件名, 以及文件扩展名</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal moreinfo="none">固定宽度的文字</literal></term>

        <listitem>
          <para>程序列表，或者是在段落中出现的变量名、方法名、数据库、数据
          类型、环境变量、语句或关键字</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><userinput moreinfo="none">粗体固定宽度的文字</userinput></term>

        <listitem>
          <para>指命令或者其他需要被用户逐字敲入的文本</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><replaceable>斜体固定宽度的文字</replaceable></term>

        <listitem>
          <para>指那些需要用户提供值来替换的值或者由运行环境决定的值。</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <tip>
      <para>这个图标表示一个小窍门或建议或一般的注释。</para>
    </tip>

    <caution>
      <para>这个图标标示一个警告或劝告。</para>
    </caution>
  </sect1>

  <sect1 id="preface-examples">
    <title>使用例子中的代码</title>

    <para>这本书可以帮助你顺利的完成工作。通常，你可能会使用这本书中的代码用于
    你的程序或文档。如果你不是直接复制完整的样例代码以做它用就不需要联系我们获
    取使用许可。例如，在你的程序中使用本书中的代码是不需要许可的。出售或者发布
    一个本书中样例库的 CD 是需要许可的。通过引用本书中的例子来回答问题不需要许
    可。融合大量的本书案例代码到你的文档中是需要许可的。</para>

    <para>如果你标明引用代码的出处，我们将十分感谢，但这不是必须的。出处信息通
    常包括 <phrase role="keep-together">标题, 作者,</phrase>出版商, 和 ISBN。 
    例如: “<emphasis>Dart:启动和运行</emphasis> by Kathy <phrase role="keep-together">Walrath
    and</phrase> Seth Ladd (O’Reilly). Copyright 2013 Kathy Walrath and Seth
    Ladd, 978-1-449-33089-7.”</para>

    <para>如果你觉得使用这些代码的方式需要一份许可，可以随时联系我们
    <email>permissions@oreilly.com</email>.</para>
  </sect1>

  <sect1 id="preface-safari">
    <title>Safari® 网上书店</title>

    <note role="safarienabled">
      <para>Safari 网上书店 (<ulink role="orm:hideurl:ital" url="http://my.safaribooksonline.com/?portal=oreilly">www.safaribooksonline.com</ulink>)是一个数字图书馆，
      用户可以点播专业的<ulink
      role="orm:hideurl"
      url="http://www.safaribooksonline.com/content">内容</ulink> 包括全球科技商业领域最顶尖作者的图书、视频。</para>
    </note>

    <para>科技专业人事，软件开发者，网站设计者，商业和创新人事使用Safari 网上书店作为他们主要的资源获取来源，用于研究，解决问题，学习，认证培
    训等。</para>

    <para>Safari 网上书店为<ulink role="orm:hideurl"
    url="http://www.safaribooksonline.com/organizations-teams">组织</ulink>、<ulink role="orm:hideurl"
    url="http://www.safaribooksonline.com/government">政府机构</ulink>、 <ulink role="orm:hideurl"
    url="http://www.safaribooksonline.com/individuals">个人</ulink>提供了一系列的 <ulink role="orm:hideurl"
    url="http://www.safaribooksonline.com/subscriptions">产品组合</ulink>
    产品组合和定价。用户可以获得成千上万的书籍及培训视频或正式出版前的手稿，
    并可在一个可搜索的数据库中查找包括O'Reilly媒体，Prentice Hall Professional，
    Addison-Wesley Professional，微软出版社，Sams，Que，Peachpit Press，
    Focal Press，Cisco Press，John Wiley &amp; Son，Syngress，摩根考夫曼，
    IBM红皮书，Packt，Adobe Press，金融时报出版社，Apress，Manning，New Riders，
    McGraw-Hill，Jones &amp; Bartlett，Course Technology等等<ulink
    role="orm:hideurl"
    url="http://www.safaribooksonline.com/publishers">更多</ulink>。有关Safari
    网上书店的详细信息，请访问我们的<ulink
    role="orm:hideurl"
    url="http://www.safaribooksonline.com/">网站</ulink>。</para>
  </sect1>

  <sect1 id="preface-contact">
    <title>如何联系我们</title>

    <para>请将与这本书有关的评论或问题发送至如下出版商地址：</para>

    <simplelist type="vert">
      <member>O’Reilly Media, Inc.</member>

      <member>1005 Gravenstein Highway North</member>

      <member>Sebastopol, CA 95472</member>

      <member>800-998-9938 (in the United States or Canada)</member>

      <member>707-829-0515 (international or local)</member>

      <member>707-829-0104 (fax)</member>
    </simplelist>

    <para>我们为这本书建立了一个网页，包含错误信息、例子、和其他的额外的信息。
    网址 <ulink
    url="http://oreil.ly/Dart_Up_and_Running"></ulink>.</para>

    <para>评论或者提问技术问题（关于这本书的），请发送电子邮件：
    <email>bookquestions@oreilly.com</email>.</para>

    <para>寻找更多的图书、课程、大会、新闻方面的信息，访问我们的网站 <ulink
    url="http://www.oreilly.com"></ulink>。</para>

    <para>我们的 Facebook: <ulink
    url="http://facebook.com/oreilly"></ulink></para>

    <para>我们的 Twitter: <ulink
    url="http://twitter.com/oreillymedia"></ulink></para>

    <para>我们的 YouTube: <ulink
    url="http://www.youtube.com/oreillymedia"></ulink></para>
  </sect1>

  <sect1 id="preface-updates">
    <title>内容更新</title>

    <para>这部分详述了第一次和第二次印刷后的所有修改。</para>

    <sect2 id="preface-updates-v3">
      <title>第二次印刷后的修改</title>

      <para>我们改变文字和例子以反应出 Dart 语言的相关修改：</para>

      <itemizedlist>
        <listitem>
          <para>实例变量不能再变成 <literal>常量</literal>。
          取而代之的是使用 <literal>静态常量</literal> 。</para>
        </listitem>

        <listitem>
          <para> <literal>?</literal> 操作符用来测试是否是一个可选的参数的
          功能被取消了。</para>
        </listitem>

        <listitem>
          <para>Map 的字面值键值不再强制是字符串类型的了。</para>
        </listitem>

        <listitem>
          <para>Dart 现在拥有符号和符号字面值
          (<literal>#<replaceable>标识符</replaceable></literal>): <xref
          linkend="ch02-symbols" />。</para>
        </listitem>

        <listitem>
          <para>相等测试变得更容易了：<xref
          linkend="ch02-function-equality" />.</para>
        </listitem>

        <listitem>
          <para>提升了按位操作符的优先级。</para>
        </listitem>
      </itemizedlist>

      <para>我们也更新了以下内容以反应 API 的变化。在 Dart：核心库中：</para>

      <itemizedlist>
        <listitem>
          <para>Set 的 <literal>isSubsetOf()</literal> 方法不再使用了。 相取代的,
          使用 Set 的 <literal>containsAll()</literal> 方法。 你可以使用 <literal>toSet()</literal> 把任何可迭代的类型转换成 Set。</para>
        </listitem>

        <listitem>
          <para>Collection 类不再使用了, 因此我们改变了 sets，lists，和 maps 
          的功能，详见 <xref linkend="ch03-collections" />, 并且我们更多的关注 Iterable.</para>
        </listitem>

        <listitem>
          <para>先前的 dart:ure 类库中的功能现在被整合到了 dart:核心类库的 
          Uri 类中。 最高级别的功能
          <literal>encodeUri()</literal>,
          <literal>encodeUriComponent()</literal>,
          <literal>decodeUri()</literal>, 
          <literal>decodeUriComponent()</literal> 现在变成了各自对应的 Uri 类
          的静态方法命名为：
          <literal>encodeFull()</literal>,
          <literal>encodeComponent()</literal>,
          <literal>decodeFull()</literal>, 
          <literal>decodeComponent()</literal>. 要从字符串中创建 Urt，你需要使用静态的 <literal>parse()</literal> 方法。 Uri 类现在只有一个构造器，它依然拥有原来 
          <literal>Uri.fromComponents()</literal> 构造器同样的参数。
          最后,  <literal>domain</literal> 域现在改名为<literal>host</literal>。</para>
        </listitem>

        <listitem>
          <para> @deprecated, @override, 和 @proxy 注释从 meta package 转移到了 dart:core 核心类库中。</para>
        </listitem>
      </itemizedlist>

      <para> dart:io: 类库：</para>

      <itemizedlist>
        <listitem>
          <para>File 类的 <literal>openWrite()</literal> 方法现在不再必须要求参数了，但是仍然保留了两个可选参数。 
          <literal>mode</literal> 参数有一个默认的值：
          <literal>FileMode.WRITE</literal>。</para>
        </listitem>

        <listitem>
          <para>File 的 <literal>readAsString()</literal> 和
          <literal>readAsLines()</literal> 方法不再必须需要一个参数。 相替代的, 他们拥有了一个可选的参数：
          (<literal>encoding</literal>), 这个参数的默认值是
          <literal>Encoding.UTF_8</literal></para>
        </listitem>

        <listitem>
          <para>IOSink 的写数据方法调整了。用<literal>write()</literal>取代了<literal>addString()</literal>来写字符串数据。前期临时命名为 <literal>writeBytes()</literal>的写二进制数据的方法, 改成了 <literal>add()</literal>.</para>
        </listitem>
      </itemizedlist>

      <para>新的 dart:convert 类库取代了 dart:json 和 dart:uri:</para>

      <itemizedlist>
        <listitem>
          <para>取消了 StringDecoder, 而使用
          <literal>UTF8.decoder</literal> 转换 UTF-8 字符为
          Dart 字符。</para>
        </listitem>

        <listitem>
          <para>取代了 LineTransformer, 现在使用  LineSplitter 对象将一个字符串输入流分拆成每一行。</para>
        </listitem>

        <listitem>
          <para>过去使用的 dart:json 顶层 
          <literal>parse()</literal> 和 <literal>stringify()</literal>
          功能废弃了, 现在分别使用 <literal>JSON.decode()</literal> 和
          <literal>JSON.encode()</literal>。</para>
        </listitem>

        <listitem>
          <para>过去使用的 dart:uri 顶层
          <literal>decodeUri()</literal> 和 <literal>encodeUri()</literal>
          功能肺气了, 现在分别使用 <literal>UTF8.decode()</literal> 和
          <literal>UTF8.encode()</literal>。</para>
        </listitem>
      </itemizedlist>

      <para>其他的 API 改变:</para>

      <itemizedlist>
        <listitem>
          <para>在 dart:html 类库中, <literal>query()</literal> 和
          <literal>queryAll()</literal> 方法分别改成了
          <literal>querySelector()</literal> 和
          <literal>querySelectorAll()</literal>。</para>
        </listitem>

        <listitem>
          <para>dart:crypto 类库从 SDK 中移除了 (详见 <ulink
          url="http://pub.dartlang.org/packages/crypto">http://pub.dartlang.org/packages/crypto</ulink>)。</para>
        </listitem>

        <listitem>
          <para> AsyncError class 被移除了 (从 dart:async 中)。</para>
        </listitem>

        <listitem>
          <para> dart:isolate 类库被重构了， 现在只有核心的
          primitives. 书中我们移除了它的大部分介绍内容，但是我们期待更高水平的 API 能够开发出来使隔离更容易</para>
        </listitem>

        <listitem>
          <para> main() 方法现在拥有一个可选的参数
          (List&lt;String&gt;)。</para>
        </listitem>
      </itemizedlist>

      <para>讲解工具的章节也做了相应的调整：</para>

      <itemizedlist>
        <listitem>
          <para>dart_analyzer 工具被
          dartanalyzer 取代了</para>
        </listitem>

        <listitem>
          <para>很多工具的命令行参数调整了。例如 dartdoc <literal>--pkg</literal> 命令行选项
          变更为 <literal>--package-root</literal>。</para>
        </listitem>

        <listitem>
          <para>pub 工具现在有 build 和 serve 命令集了, 它们可以让转换器将源代码文件转换成最终格式。</para>
        </listitem>

        <listitem>
          <para>我们完善了 dart2js 文档。</para>
        </listitem>
      </itemizedlist>

      <para>我们同样增加了以前无正式文件说明的特性的范围,并稍稍调整已有的范围。在语言的简介中：</para>

      <itemizedlist>
        <listitem>
          <para>添加了 <xref linkend="ch02-mixins" />。</para>
        </listitem>

        <listitem>
          <para>在 <xref linkend="ch02-keywords" /> 中, 标记出哪些关键字是内建的标识符，并论述了他们与保留标识符的不同。</para>
        </listitem>

        <listitem>
          <para>增加了 + 操作符的功能，现在可以作用于字符串了。</para>
        </listitem>

        <listitem>
          <para>论述了使用表达式（例如 function calls）作为非默认构造器参
          数的相关问题。</para>
        </listitem>

        <listitem>
          <para>添加了一些关于 @override 和 @proxy 注释相关的例子。</para>
        </listitem>

        <listitem>
          <para>修改了文档注释的例子，使他们符合最新的规则,并且指向了 <ulink
          url="https://www.dartlang.org/articles/doc-comment-guidelines/">Dart 文档注释准测。</ulink></para>
        </listitem>
      </itemizedlist>

      <para>在类库的概览中：</para>

      <itemizedlist>
        <listitem>
          <para>增加 <xref linkend="ch03-mirrors" />。</para>
        </listitem>

        <listitem>
          <para>添加关于解析非十进制数字的例子。</para>
        </listitem>

        <listitem>
          <para>在使用 Future.wait() 的例子中，错误使用 <literal>new</literal> 的部分移除了。</para>
        </listitem>

        <listitem>
          <para>移除完成符的范围，它不再被推荐了。</para>
        </listitem>

        <listitem>
          <para>添加 <xref linkend="ch03-streams" />。</para>
        </listitem>
      </itemizedlist>

      <para>我们更新了全书中所有相关主题的链接。</para>
    </sect2>

    <sect2 id="preface-updates-v2">
      <title>第二次印刷中的修改： 2013年3月29日</title>

      <para>我们更新了相关内容以反应出以下第二次印刷中的修改：</para>

      <itemizedlist>
        <listitem>
          <para>现在必须在附加类库文件中使用 <literal>part of</literal> ，
          而不再是可选的了。</para>
        </listitem>

        <listitem>
          <para>在 M2 中，调整了一些 API ：</para>

          <itemizedlist>
            <listitem>
              <para>在 dart:html 类库中, Element 的 <literal>elements</literal>
              属性改为了 <literal>children</literal>。</para>
            </listitem>

            <listitem>
              <para> dart:html 类库中的名字做了调整，现在更加符合 Dart 命名规范了。 特别的, <literal>innerHTML</literal> 修改为
              <literal>innerHtml</literal>。</para>
            </listitem>

            <listitem>
              <para>String 的<literal>charCodes()</literal> 方法修改成了一个 getter ，因此我们移除所有引用的圆括号，<literal>charCodes</literal>。</para>
            </listitem>

            <listitem>
              <para>File 的 <literal>readAsText()</literal> 方法变成了
              <literal>readAsString()</literal>。</para>
            </listitem>

            <listitem>
              <para>Date 类的构造器做了调整。</para>
            </listitem>

            <listitem>
              <para>删除了 NullPointerException 。</para>
            </listitem>

            <listitem>
              <para>删除了 RegExp 的静态构造器</para>
            </listitem>

            <listitem>
              <para>StringBuffer 的 <literal>add()</literal> 方法的返回值类型修改为 void。
              做链式调用的代码现在可以使用 cascades 方法代替。</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>现在使用<literal>dart.js</literal>推荐的方式是生成一个本地的副本，更好的方式是下载使用<literal>browser</literal> pub 包。</para>
        </listitem>

        <listitem>
          <para>Dart 语言现在支持 Metadata 了。 请查看 <xref
          linkend="ch02-metadata" />。</para>
        </listitem>

        <listitem>
          <para>我们增加了<ulink
          url="http://www.dartlang.org/articles/web-ui/">Web UI
          包</ulink> 的参考，这个包为创建 web 应用的 UI 界面提供
          了一个高级的，可升级的方法。
          </para>
        </listitem>

        <listitem>
          <para>在 M3 中，mixins 被添加到了语言中，可以重用不同类中的代码。</para>
        </listitem>

        <listitem>
          <para>在 M3 中核心库被很大程度的优化了。包括了一下的修改：</para>

          <itemizedlist>
            <listitem>
              <para>一些方法被修改为域或者getters。这意味着我们应该在<literal>hashCode</literal>,<literal>isEmpty</literal>, 和
              <literal>isNan</literal>后面移除<literal>()</literal> 。我们同样将
              <literal>getKeys()</literal> 改为 <literal>keys</literal>, 将
              <literal>getValues()</literal> 改为
              <literal>values</literal>。</para>
            </listitem>

            <listitem>
              <para>Iterable 类得到了增强，所有的Collections 都收到了影响，例如 
              Lists 和 Sets。Collection以前的方法<literal>filter()</literal> 和 <literal>map()</literal> 移到了 Iterable 中，并且<literal>filter()</literal>的名字改为<literal>where()</literal>.
                (<literal>map()</literal>
              暂时改为 <literal>mappedBy()</literal>,是由于社区反馈这个决定是对其是倒退发展。) 
              <literal>some()</literal> 方法改为
              <literal>any()</literal>。Iterables 返回的很多值现在是惰性填充Iterables；你可以使用<literal>toList()</literal> 或 <literal>toSet()</literal> 强制赋值。我们推荐<emphasis>继承 </emphasis>Iterable，而不是只是实现它，因此你可以从添加新功能中得益。更多的细节请查看文章  <ulink
              url="http://www.dartlang.org/articles/m3-whats-new/iterables.html">Iterables.</ulink></para>
            </listitem>

            <listitem>
              <para>The Iterator interface changed from
              <literal>next()</literal> and <literal>hasNext()</literal> to
              <literal>current</literal> and
              <literal>moveNext()</literal>.</para>
            </listitem>

            <listitem>
              <para>The dart:json library no longer has a JSON class. Former
              JSON static methods such as <literal>parse()</literal> and
              <literal>stringify()</literal> are now top-level
              functions.</para>
            </listitem>

            <listitem>
              <para>Date is now named DateTime, and the
              <literal>fromString()</literal> constructor is now a static
              method named <literal>parse()</literal>.</para>
            </listitem>

            <listitem>
              <para>Event-handler registration used to be
              <literal>.on.<replaceable>event</replaceable>.add()</literal>;
              now it’s
              <literal>.on<replaceable>Event</replaceable>.</literal><literal
              role="keep-together">listen</literal>.</para>
            </listitem>

            <listitem>
              <para>The dart:html HttpRequest <literal>get()</literal> method
              was replaced by <literal>getString()</literal> and
              <literal>request()</literal>, which return Future&lt;String&gt;
              and Future&lt;HttpRequest&gt;, respectively.</para>
            </listitem>

            <listitem>
              <para>The dart:html Window <literal>setTimeout()</literal>
              method is gone; instead, use <literal>Future.delayed()</literal>
              or, if you know what you’re doing, a Timer.</para>
            </listitem>

            <listitem>
              <para>Timer and Completer moved from dart:isolate to a new
              library called dart:async. The Timer constructors now take a
              Duration instead of an int.</para>
            </listitem>

            <listitem>
              <para>The Future <literal>chain()</literal> and
              <literal>handleException()</literal> methods are gone, replaced
              by <literal>then()</literal> and
              <literal>catchError()</literal>.</para>
            </listitem>

            <listitem>
              <para>The String <literal>splitChars()</literal> method is gone;
              instead, use <literal>split()</literal> with an empty string
              argument. String’s <literal>charCodes</literal> getter and
              <literal>charCodeAt()</literal> method are gone; to get UTF-16
              code units, use String’s <literal>codeUnits</literal> or
              <literal>codeUnitAt()</literal> instead.</para>
            </listitem>

            <listitem>
              <para>The StringBuffer <literal>add()</literal> and
              <literal>addAll()</literal> methods were replaced by
              <literal>write()</literal> and <literal>writeAll()</literal>,
              respectively.</para>
            </listitem>

            <listitem>
              <para>The dart:io library changed significantly after M3, as did
              all I/O in Dart. I/O now centers around the dart:async library’s
              Stream and Future classes, instead of callbacks. The InputStream
              and OutputStream classes were replaced with classes implementing
              <ulink
              url="http://api.dartlang.org/docs/releases/latest/dart_async/Stream.html">Stream</ulink>
              and <ulink
              url="http://api.dartlang.org/dart_io/IOSink.html">IOSink.</ulink>
              A new <ulink
              url="http://api.dartlang.org/dart_io/FileSystemEntity.html">FileSystemEntity</ulink>
              class is the superclass of File and Directory. To create a new
              HttpServer, you now use the static <literal>bind()</literal>
              method. For more information, see the <ulink
              url="http://news.dartlang.org/2013/02/io-library-now-uses-streams.html">announcement.</ulink></para>
            </listitem>

            <listitem>
              <para>The most used dart:crypto methods for hashes changed from
              <literal>update()</literal> and <literal>digest()</literal> to
              <literal>add()</literal> and <literal>close()</literal>.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para>We corrected or clarified some text, such as:</para>

      <itemizedlist>
        <listitem>
          <para>Bitwise operators are implemented in <emphasis
          role="bold">int</emphasis>, not num.</para>
        </listitem>

        <listitem>
          <para>The <literal>is</literal> and <literal>as</literal> examples
          (in <xref linkend="ch02-op-type-test" />) aren’t completely
          equivalent.</para>
        </listitem>
      </itemizedlist>

      <para>We also added sections for some pre-existing features:</para>

      <itemizedlist>
        <listitem>
          <para>Keywords (see <xref linkend="ch02-keywords" />)</para>
        </listitem>

        <listitem>
          <para>Lexical scope (see <xref
          linkend="ch02-lexical-scope" />)</para>
        </listitem>

        <listitem>
          <para>Function equality (see <xref
          linkend="ch02-function-equality" />)</para>
        </listitem>

        <listitem>
          <para>The dart_analyzer tool (see <xref
          linkend="ch04-tools-dart_analyzer" />)</para>
        </listitem>

        <listitem>
          <para>The dartdoc tool (see <xref
          linkend="ch04-tools-dartdoc" />)</para>
        </listitem>
      </itemizedlist>

      <para>Finally, <xref linkend="BrowserChart" /> now uses a more recent
      benchmark and has the latest numbers.</para>
    </sect2>
  </sect1>

  <sect1 id="preface-acknowledgments">
    <title>Acknowledgments</title>

    <para>We’d like to thank the many people who contributed to this book. We
    hope we haven’t forgotten anyone, but we probably have.</para>

    <para>The following Dart engineers and managers gave us prompt, helpful
    reviews and information for the sections corresponding to their areas of
    responsibility: Mads Ager, Peter von der Ahé, Justin Fagnani, Dan Grove,
    Florian Loitsch, Sam McCall, Vijay Menon, John Messerly, Anton Muhin,
    Lasse R.H. Nielsen, Bob Nystrom, Ivan Posva, Jaime Wren, Matthias Hausner,
    Keerti Parthasarathy, and Konstantin Scheglov.</para>

    <para>We’d especially like to thank the people who reviewed even bigger
    swaths of the book or contributed in other, large ways:</para>

    <itemizedlist>
      <listitem>
        <para>JJ Behrens, whose careful look at the first draft of the book
        helped us catch errors and inconsistencies, as well as rework Chapter
        5 to be more interesting, and less of a laundry list. He also created
        a system for testing our samples.</para>
      </listitem>

      <listitem>
        <para>Shailen Tuli, who helped test our examples although he didn’t
        even work for Google.</para>
      </listitem>

      <listitem>
        <para>Mary Campione, whose stream-of-consciousness review of the
        entire book, performed while she was first learning the language,
        helped us find and fix many confusing spots, as well as some errors.
        Later she reviewed and updated our samples, and she implemented
        continuous build testing for our samples on drone.io.</para>
      </listitem>

      <listitem>
        <para>Phil Quitslund, who did a big-picture review of the book and
        gave us guidance and encouragement.</para>
      </listitem>

      <listitem>
        <para>Kasper Lund, whose review caught issues that only someone with
        his expert, comprehensive knowledge of the Dart language and libraries
        could have found.</para>
      </listitem>

      <listitem>
        <para>Gilad Bracha, the language spec writer whose reviews of the
        language chapter were invaluable for getting language details right.
        We couldn’t cover everything, so we look forward to his future work on
        making all the corners of the language understandable to all Dart
        programmers.</para>
      </listitem>
    </itemizedlist>

    <para>Other Googlers helped, as well. Vivian Li, the head of Chrome
    Developer Relations, supported our work on this book. Andres Ferrate, the
    Google Press liaison to O’Reilly, helped simplify the process of getting
    the book published. Myisha Harris gave us excellent legal advice.</para>

    <para>The people at O’Reilly were extremely helpful. Meghan Blanchette,
    our editor, kept everything going smoothly, monitoring our progress in the
    nicest possible way. Christopher Hearse and Marisa LaFleur checked our
    work and helped us make some last-minute fixes that improved the final
    result. We’d also like to thank the good people who manage the author
    workflow and make working on an O’Reilly book such a pleasure. We
    personally worked with Sarah Schneider, Jessica Hosman, and Rachel
    James.</para>

    <para>Finally, we thank Lars Bak and Kasper Lund for writing the foreword,
    and most of all for creating Dart.</para>
  </sect1>
</preface>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="ch01">
  <?dbhtml stop-chunking?>

  <title>快速起步</title>

  <para>Dart 是开源的、用于创建结构化 HTML5 web 应用的开发语言。本章告诉你为啥 Google 发明
      Dart，Dart 有哪些库的特性，以及如何编写并运行您的第一个 Dart 应用。
  </para>

  <para>
      Dart 不仅仅只是一个新的语言，还包含 各种库、一个编辑器、一个虚拟机（VM）、
      一个能直接运行 Dart 代码的浏览器、和一个能把 Dart 代码编译为 JavaScript 的编译器。
      Dart 的目标是用一种更高效的方式来创建满足用户需求的现代化、高性能应用。
  </para>

  <warning>
    <para>Dart 还在演进中！该书在 2013 年 3 月 开始发布，这个时候里程碑 3 版本刚刚发布，这个时候
        Dart 语言已经稳定，但是一些库还再开发中。如果可能，本书将告诉你那些我们期望实现的功能。</para>
  </warning>

  <sect1 id="ch01-why-dart">
    <title>为什么 Google 要发明 Dart </title>

    <para>Google 非常在意如何让 web 更加帮。 我们白编写了一些 web 应用，
        有些非常成功 - 例如 Gmail、Google 日历、Google+ 等。
        我们希望 web 应用能够快速的加载、平滑的运行、并且具有迷人而又不失风趣的体验。
        我们还希望具有任意背景的开发人员都可以创造很棒的浏览器应用。</para>

    <para>
        Google Chrome 浏览器就是Google 对 web 承诺的一个 示例。
        当 web 平台的发展停滞不前的时候， Google 通过创建 Chrome 浏览器来促进竞争。
        事实证明结果是非常好的。 如 <xref
    linkend="BrowserChart" /> 所示，
    自从 Chrome 浏览器在 2008 年发布以来，浏览器的速度增加了很多。</para>

    <note>
      <para>著名的 <firstterm>V8</firstterm> JavaScript 引擎
          极大的提高了 Chrome 的速度。大多数的 V8 工程师现在都在参与 Dart 项目。</para>
    </note>

    <figure float="0" id="BrowserChart">
      <title>浏览器速度 (V8 benchmark suite v7; 数字越大性能越好)</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/daur_0101.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
        浏览器的新功能也得到了发展， 例如 
      WebGL、 FileSystem、 Web workers、 和 WebSockets。
      现在浏览器也具有了自动更新能力，可以经常给用户更新新的功能。
    就连移动设备也具有了支持 HTML5 特性的浏览器了。
    </para>

    <para>
        尽管 web 平台有了很多改进，但是用来开发 web 应用的方式还是没有太大的改变。
        我们认为创建 大型的、复杂的 web 应用应该更加容易。
        和其他开发平台比起来，web 用于提高开发效率的工具发展的也很慢。
        在开发现代化的 web 程序之前你还必须熟悉 web 编程。另外，尽管 JavaScript 引擎变得越来越快，但是
         web 应用的启动速度依然很慢。</para>

    <para>我们期待 Dart 能从如下两个方面帮助我们解决这些问题：</para>

    <itemizedlist>
      <listitem>
        <para><emphasis>更好的性能：</emphasis> 
        作为虚拟机工程师，Dart 设计者知道如何创建一个高性能的语言。
        更加结构化的语言更容易优化，一个新的 VM 可以更容易提高性能。</para>
      </listitem>

      <listitem>
        <para><emphasis>更高的成产率：</emphasis> 
        支持库和包可以帮助你和其他开发者协同工作，并且重用其他项目的代码更加容易。
        类型可以让 API 看起来更加清晰和更容易使用。
        工具帮助你重构、定位和调试代码。    
        </para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="ch01-quick-look">
    <title>快速瞥一眼 Dart 语言</title>

    <para>代码胜过千言万语，下面是一个简单的 Dart 程序示例：</para>

    <programlisting format="linespecific" role="keep-together"><remark>lang-dart
</remark>import 'dart:math';

class Point {
  num x, y;
  Point(this.x, this.y);
  num distanceTo(Point other) {
    var dx = x - other.x;
    var dy = y - other.y;
    return sqrt(dx * dx + dy * dy);
  }
}

main() {
  var p = new Point(2, 3);
  var q = new Point(3, 4);
  print('distance from p to q = ${p.distanceTo(q)}');
}</programlisting>

    <para>当然了，Dart 主要用来编写 web 应用。编写一个 web 应用也是非常容易的：</para>

    <programlisting format="linespecific"><remark>lang-dart
</remark>import 'dart:html';

main() {
  var button = new ButtonElement();
  button..id = 'confirm'
        ..text = 'Click to Confirm'
        ..classes.add('important')
        ..onClick.listen((e) =&gt; window.alert('Confirmed!'));
  querySelector('#registration').children.add(button);
}</programlisting>

    <para>在 <xref
    linkend="ch02" xrefstyle="select: labelnumber" /> 和 <xref linkend="ch03"
    xrefstyle="select: labelnumber" /> 中将分别介绍 Dart  语言特性和主要的库。</para>
  </sect1>

  <sect1 id="ch01-whats-cool">
    <title>Dart 最酷的地方在哪里</title>

    <para>Dart 可能看起来很熟悉，但是不要被她的外表给迷惑了。
        Dart 有很多非常酷的特性来帮助你提高开发效率，另外用 Dart 开发下一代
        超棒 web 应用的过程是非常有趣的。
    </para>

    <para><emphasis>Dart 很容易上手。</emphasis> 
    很多开发者都可以很容易的学习 Dart。
    Dart 是一个面向对象语言，支持 类、单继承、词法范围、顶级方法和非常熟悉的语法。
    大部分的开发者几个小时就可以开始用 Dart 语言了。</para>

    <para><emphasis>Dart 可以编译为 JavaScript。</emphasis> Dart
        在设计的时候就可以编译为 JavaScript，这样 Dart 应用就可以在不支持 Dart VM 的浏览器中运行了。
    语言中的每个特性在添加之前都会考虑是否能够移植到 JavaScript。 Dart 
    划定了一个基准线，并不支持老旧的遗留浏览器。
    </para>

    <para><emphasis>Dart 可以在客户端和服务器运行。</emphasis> 
    Dart 虚拟机 (VM) 可以在浏览器中运行，也可以作为
    独立的命令行应用运行。内置的库支持 文件、目录、socket、和 web 服务器等功能。
    你完全可以用 Dart 来开发一个独立的应用。
    </para>

    <para><emphasis>Dart 带有一个轻量级的编辑器。</emphasis> 
    可以用 Dart 编辑器编写、启动、调试 Dart 应用。
    编辑器具有 代码完成、提示潜在的 bug、调试命令行和 web 应用、还支持重构。
    编写 Dart 应用并不一定使用 Dart 编辑器，编辑器只是一个提高你开发效率的工具。    
    </para>

    <para><emphasis>Dart supports types, without requiring them.</emphasis>
    You can omit types when you want to move very quickly, aren’t sure what
    structure to take, or simply want to express something you can’t with the
    type system. You can add types as your program matures, the structure
    becomes more evident, and more developers join the project. Dart’s
    optional types are static type annotations that act as documentation,
    clearly expressing your intent. Using types means that fewer comments are
    required to document the code, and tools can give better warnings and
    error messages.</para>

    <para><emphasis>Dart scales from small scripts to large, complex
    apps.</emphasis> Web development is very much an iterative process. With
    the reload button acting as your compiler, building the seed of a web app
    is often a fun experience of writing a few functions just to experiment.
    As the idea grows, you can add more code and structure. Thanks to Dart’s
    support for top-level functions, optional types, classes, and libraries,
    your Dart programs can start small and grow over time. Tools such as Dart
    Editor help you refactor and navigate your code as it evolves.</para>

    <para><emphasis>Dart has a wide array of built-in libraries.</emphasis>
    The core library supports built-in types and other fundamental features
    such as collections, dates, and regular expressions. Web apps can use the
    HTML library—think DOM programming, but optimized for Dart. Command-line
    apps can use the I/O library to work with files, directories, sockets, and
    servers. Other libraries include URI, UTF, Crypto, Math, and Unit
    test.</para>

    <para><emphasis>Dart supports safe, simple concurrency with
    isolates.</emphasis> Traditional shared-memory threads are difficult to
    debug and can lead to deadlocks. Dart’s isolates, inspired by Erlang,
    provide an easier to understand model for running isolated, but
    concurrent, portions of your code. Spawning new isolates is cheap and
    fast, and no state is shared. In web apps, isolates even compile to Web
    workers.</para>

    <para><emphasis>Dart supports code sharing.</emphasis> Traditional web
    programming workflows can’t integrate third-party libraries from arbitrary
    sources or frameworks. With the Dart package manager (pub) and language
    features such as libraries, you can easily discover, install, and
    integrate code from across the web and enterprise.</para>

    <para><emphasis>Dart is open source.</emphasis> Dart was born for the web,
    and it’s available under a BSD-style license. You can find the project’s
    <ulink url="http://dart.googlecode.com">issue tracker and source
    repository</ulink> online. Maybe you’ll submit the next patch?</para>
  </sect1>

  <sect1 id="ch01-editor">
    <title>Up and Running</title>

    <para>Now that you know something about Dart, get ready to code! These
    instructions feature the open-source Dart Editor tool. When you download
    Dart, you not only get Dart Editor, but also tools such as the
    Dart-to-JavaScript compiler and a version of Chromium (nicknamed
    <emphasis>Dartium</emphasis>) that includes the Dart VM.</para>

    <note>
      <para>If you run into trouble installing and using Dart Editor, see
      <ulink
      url="http://www.dartlang.org/tools/editor/troubleshoot.html">Troubleshooting
      Dart Editor.</ulink></para>
    </note>

    <sect2 id="ch01-editor-download">
      <title>Step 1: Download and Install the Software</title>

      <para>In this step, you’ll install Dart Editor and, if necessary, a Java
      runtime environment. (To avoid having to modify the PATH environment
      variable, you can install the JRE under your Dart installation
      directory, in a subdirectory named <code>jre</code>.)</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para><ulink url="http://dartlang.org/#get-started">Download
          Dart</ulink>.</para>
        </listitem>

        <listitem>
          <para>Unzip the file you downloaded. The resulting directory, which
          we’ll call your <emphasis>Dart installation directory</emphasis>,
          contains the <code>DartEditor</code> executable file and several
          subdirectories, including a <code>samples</code> directory.</para>
        </listitem>

        <listitem>
          <para>If you don’t already have a Java runtime, download and install
          it. Dart Editor requires Java version 6 or higher.</para>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-launch">
      <title>Step 2: Launch the Editor</title>

      <para>Go to your Dart installation directory, and double-click the
      <emphasis role="bold">DartEditor</emphasis> executable <phrase
      role="keep-together">file <inlinemediaobject>
          <imageobject>
            <imagedata fileref="figs/web/Dart_Logo_21.png" format="PNG"
                       width="0.12in" />
          </imageobject>
        </inlinemediaobject>.</phrase></para>

      <para>You should see the Dart Editor application window appear, looking
      something like <xref linkend="DartEditor-initial" />.</para>

      <figure float="0" id="DartEditor-initial">
        <title>Dart Editor and its Welcome page</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/daur_0102.png" format="PNG" />
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>

    <sect2 id="ch01-editor-code">
      <title>Step 3: Create and Run an App</title>

      <para>It’s easy to create a simple web or command-line app from scratch.
      This step walks you through creating and running a command-line
      app.</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para>Click the New Application button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/newapp.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject> (at the upper left of Dart Editor).
          Alternatively, choose <emphasis role="bold">File &gt; New
          Application...</emphasis> from the Dart Editor menu, or click the
          <emphasis role="bold">Create an Application…</emphasis> button in
          the Welcome page. A dialog appears (see <xref
          linkend="DartEditor-newapp" />).</para>
        </listitem>

        <listitem>
          <para>Type in a name for your application—for example,
          <code>hello_world</code>. If you don’t like the default directory,
          type in a new location or browse to choose the location.</para>
        </listitem>

        <listitem>
          <para>Make sure <emphasis role="bold">Generate sample
          content</emphasis> and <emphasis role="bold">Command-line
          application</emphasis> are selected. Then click <emphasis
          role="bold">Finish</emphasis> to create the initial files for the
          app.</para>

          <figure float="0" id="DartEditor-newapp">
            <title>Create command-line or web apps with Dart Editor</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0103.png" format="PNG" />
              </imageobject>
            </mediaobject>
          </figure>

          <para>A default Dart file appears in the Edit view, and its
          directory appears in the Files view. Your Dart Editor window should
          look something like <xref linkend="DartEditor-helloworld" />.</para>

          <figure float="0" id="DartEditor-helloworld">
            <title>Dart Editor displaying a new app’s files</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0104.png" format="PNG" />
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>

        <listitem>
          <para>Click the Run button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/run.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject> to run your new app.</para>

          <para>For command-line apps, the output of
          <literal>print()</literal> appears at the bottom right, in a new tab
          next to the Problems tab.</para>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-sample">
      <title>Step 4: Open and Run a Sample</title>

      <para>The Dart Editor bundle comes with several samples. In this step,
      you’ll open a sample web app and run it in Dartium.</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para>Click the <emphasis role="bold">Welcome</emphasis> tab. Or
          choose <emphasis role="bold">Welcome Page</emphasis> from the
          <emphasis role="bold">Tools</emphasis> menu.</para>
        </listitem>

        <listitem>
          <para>In the Welcome tab, click the image labeled <emphasis
          role="bold">Sunflower</emphasis>. Dart Editor creates a copy of the
          <ulink
          url="http://code.google.com/p/dart/source/browse/trunk/dart/samples/sunflower/">Sunflower
          app’s directory,</ulink> and the Editor view displays the contents
          of <emphasis>web/sunflower.html</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Click the Run button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/run.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject>. Dart Editor launches Dartium, which displays
          <phrase
          role="keep-together"><emphasis>sunflower.html</emphasis></phrase>.</para>

          <warning>
            <para>Dartium is a technical preview, and it might have security
            and stability issues.<emphasis> Do not use Dartium as your primary
            browser!</emphasis></para>
          </warning>
        </listitem>

        <listitem>
          <para>Move the slider to display the sunflower, as shown in <xref
          linkend="sunflower" />.</para>

          <figure float="none" id="sunflower">
            <title>The Sunflower sample running in Dartium</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0105.png" format="PNG" />
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-next">
      <title>What Next?</title>

      <para>Now that you know the basics, you can learn more about Dart Editor
      and help <phrase role="keep-together">improve it</phrase>.</para>

      <sect3 id="ch01-editor-tutorial">
        <title>Follow a tutorial</title>

        <para>Try the Dart web programming tutorials at <ulink
        url="http://www.dartlang.org/docs/tutorials/">A Game of Darts,</ulink>
        which feature Dart Editor.</para>
      </sect3>

      <sect3 id="ch01-editor-learn-more">
        <title>Become a power user</title>

        <para>Visit the <ulink url="http://www.dartlang.org/editor/">Dart
        Editor homepage</ulink> for help on using Dart Editor’s expanding
        feature set.</para>
      </sect3>

      <sect3 id="ch01-editor-feedback">
        <title>Send feedback</title>

        <para>Click the <emphasis role="bold">SEND FEEDBACK</emphasis> link
        (at the upper right of the Dart Editor window) whenever you notice a
        problem or have an idea for improving Dart Editor. We’ll open a new
        issue for you, if appropriate, without disclosing your sensitive or
        personally identifiable information.</para>
      </sect3>
    </sect2>
  </sect1>
</chapter>